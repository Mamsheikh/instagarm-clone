### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Comment {
  content: String!
  id: String!
  post: Post!
  postId: String!
  user: User!
  userId: String!
}

input CreatePostInput {
  caption: String
  images: [String]
}

input CreateUserInput {
  email: String!
  password: String!
  username: String!
}

type Edge {
  cursor: String
  node: Post
}

type Like {
  id: String!
  post: Post!
  postId: String!
  user: User!
  userId: String!
}

input LoginUserInput {
  email_or_username: String!
  password: String!
}

type Mutation {
  createComment(content: String!, postId: String!): Comment
  createPost(input: CreatePostInput!): Post
  follow(id: String!): User
  login(input: LoginUserInput!): User
  signup(input: CreateUserInput!): User
  toggleLike(postId: String!): Like
  unfollow(id: String!): User
  updatePost(input: UpdatePostInput!): Post
}

type PageInfo {
  endCursor: String
  hasNextPage: Boolean
}

type Post {
  caption: String
  comments: [Comment]!
  id: String!
  images: [String]
  likes: [Like]!
  user: User!
  userId: String!
}

type Query {
  Me: User
  getPosts: [Post]
  getUser(id: String!): User!
  posts(after: String, first: Int): Response
  searchUser(input: String): [User]!
}

type Response {
  edges: [Edge]
  pageInfo: PageInfo
}

input UpdatePostInput {
  caption: String
  id: String!
}

type User {
  address: String
  bio: String
  comments: [Comment]!
  email: String!
  followers: [User]
  following: [User]
  id: String!
  image: String
  isAdmin: Boolean!
  likes: [Like]!
  name: String
  phone: String
  posts: [Post]!
  username: String
  website: String
}
