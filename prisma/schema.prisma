// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @unique
  name          String?
  username      String    @unique
  phone         String?
  address       String?
  website       String?
  bio           String?
  email         String    @unique
  password      String
  emailVerified DateTime?
  image         String?
  isAdmin       Boolean   @default(false)
  followers     User[]    @relation("FollowRelation")
  following     User[]    @relation("FollowRelation")
  comments      Comment[]
  posts         Post[]
  likes         Like[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

// model Follows {
//   id          String @unique @default(uuid())
//   follower    User   @relation("follower", fields: [followerId], references: [id])
//   followerId  String
//   following   User   @relation("following", fields: [followingId], references: [id])
//   followingId String

//   @@id([followerId, followingId])
// }

model Post {
  id        String    @id @default(cuid())
  caption   String?
  images    String[]
  user      User      @relation(fields: [userId], references: [id])
  userId    String
  comments  Comment[]
  likes     Like[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Comment {
  id        String   @id @default(cuid())
  content   String
  post      Post     @relation(fields: [postId], references: [id])
  postId    String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Like {
  id     String @id @default(cuid())
  user   User   @relation(fields: [userId], references: [id])
  post   Post   @relation(fields: [postId], references: [id])
  userId String
  postId String
}
